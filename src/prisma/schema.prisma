// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native","debian-openssl-3.0.x"]
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id       Int      @id @default(autoincrement())
  email    String   @unique
  name     String?
  phone    String
  website  String
  username String   @unique
  password String
  address  Address?
  company  Company?
  posts    Post[]
  token    Token[]
}

model Address {
  id      Int    @id @default(autoincrement())
  street  String
  suite   String
  city    String
  zipcode String
  user    User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId  Int    @unique
  geo     Geo?
}

model Geo {
  id        Int     @id @default(autoincrement())
  lat       String
  lng       String
  address   Address @relation(fields: [addressId], references: [id], onDelete: Cascade)
  addressId Int     @unique
}

model Company {
  id          Int    @id @default(autoincrement())
  name        String
  catchPhrase String
  bs          String
  user        User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      Int    @unique
}

model Post {
  id       Int    @id @default(autoincrement())
  title    String
  body     String
  author   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId   Int
  createAt String
  updateAt String
}

model Token {
  id       Int    @id @default(autoincrement())
  author   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId   Int
  status   String
  expireAt String
}

model logToken {
  id        Int      @id @default(autoincrement())
  token     String
  action    String
  target    String
  createdAt DateTime @default(now())
}
